<?xml version="1.0"?>

<launch>
  <arg name="name" default="dji_m100"/>
  <arg name="model" default="$(find dji_m100_description)/urdf/dji_m100.urdf.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>

  <arg name="is_hitl_model" default="true"/>
  <arg name="is_collision_enabled" default="false"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.5"/>
  <arg name="yaw" default="0.0"/>
  <arg name="use_ground_truth_for_tf" default="true" />
  <arg name="use_ground_truth_for_control" default="true" />

  <arg name="world_frame" default="/world"/>
  <arg name="base_link_frame" default="$(arg tf_prefix)/base_link"/>
  
  <param name="robot_description" 
          command="$(find xacro)/xacro '$(arg model)' 
                      base_link_frame:=$(arg base_link_frame) 
                      world_frame:=$(arg world_frame)
                      robot_namespace:=$(arg name)
                      hitl_model:=$(arg is_hitl_model)
                      collision_enabled:=$(arg is_collision_enabled)"/>
  
  <!-- send the robot XML to param server -->
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)"/>
  <param name="world_frame" type="string" value="$(arg world_frame)"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
           -urdf
           -x $(arg x)
           -y $(arg y)
           -z $(arg z)
           -Y $(arg yaw)
           -model $(arg name)"
        respawn="false" output="screen"/>

  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- publish state and tf -->
  <node name="ground_truth_to_tf" pkg="message_to_tf" type="message_to_tf" output="screen">
    <param name="odometry_topic" value="ground_truth/state" />
    <param name="frame_id" value="$(arg world_frame)" />
    <param name="tf_prefix" value="$(arg tf_prefix)" if="$(arg use_ground_truth_for_tf)" />
    <param name="tf_prefix" value="$(arg tf_prefix)/ground_truth" unless="$(arg use_ground_truth_for_tf)" />
  </node>
  
  <group if="$(arg use_ground_truth_for_control)">
    <param name="state_topic" value="" />
    <param name="imu_topic" value="" />
  </group>
  <group unless="$(arg use_ground_truth_for_control)">
    <param name="state_topic" value="state" />
    <param name="imu_topic" value="imu" />
  </group>
  
  <group unless="$(arg is_hitl_model)">
    <!-- Load Controllers to ROSparam server -->
    <rosparam command="load" file="$(find dji_m100_description)/config/controllers.yaml" />
    <!-- Spawn Gimbal Controller -->
    <node name="gimbal_controller_spawner" pkg="controller_manager" type="spawner"
        respawn="false" output="screen" ns="/$(arg name)"
        args="--namespace=/$(arg name)
            gimbal_position_controller
            --timeout 20">
    </node>
  </group>
  
</launch>

